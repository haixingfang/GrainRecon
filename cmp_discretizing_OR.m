% compare different ways of discretizing orientations
% October 3rd, 2021
clear all;
close all;

cs = crystalSymmetry('cubic');

% method 1, Improved orientation sampling for indexing diffraction patterns
% of polycrystalline materials, 2017

% read orientation data generated by hyperspherical-coverings by Søren Schmidt
q = dlmread('Ori.txt', ' ', 1, 0);
r=rotation(quaternion(q(:,1),q(:,2),q(:,3),q(:,4)));
ori=orientation(r,cs)

figure;plot(ori,'axisAngle','all');
misori_min1=misori_min_calc(ori);
sprintf('Neighboring misorientation is %.4f degrees',min(nonzeros(misori_min1(:,1))))

if angle(ori(round(length(ori)/2)),ori(round(length(ori)/2)+1))./degree<=5
    sprintf('Neighboring misorientation is %.4f degrees', ...
        angle(ori(round(length(ori)/2)),ori(round(length(ori)/2)+1))./degree)
else
    sprintf('Neighboring misorientation is %.4f degrees', ...
        angle(ori(104),ori(105))./degree)
end
ori1=ori;

% method 2, mtex gridding method
% define a grid of orientations
ori = equispacedSO3Grid(cs,'resolution',3*degree)
figure;plot(ori,'axisAngle','all');
misori_min2=misori_min_calc(ori);
sprintf('Neighboring misorientation is %.4f degrees',min(nonzeros(misori_min2(:,1))))
if angle(ori(round(length(ori)/2)),ori(round(length(ori)/2)+1))./degree<=5
    sprintf('Neighboring misorientation is %.4f degrees', ...
        angle(ori(round(length(ori)/2)),ori(round(length(ori)/2)+1))./degree)
else
    sprintf('Neighboring misorientation is %.4f degrees', ...
        angle(ori(100),ori(101))./degree)
end
ori2=ori;

% method 3, gridding on quaternions
nDiv=30;   % 25-3.06deg, 30-2.78deg
OR=ori_division(nDiv);
r=rotation(quaternion(OR.q(:,1),OR.q(:,2),OR.q(:,3),OR.q(:,4)));
ori=orientation(r,cs)
figure;plot(ori,'axisAngle','all');
misori_min3=misori_min_calc(ori);
sprintf('Neighboring misorientation is %.4f degrees',min(nonzeros(misori_min3(:,1))))
if angle(ori(round(length(ori)/2)),ori(round(length(ori)/2)+1))./degree<=5
    sprintf('Neighboring misorientation is %.4f degrees', ...
        angle(ori(round(length(ori)/2)),ori(round(length(ori)/2)+1))./degree)
else
    sprintf('Neighboring misorientation is %.4f degrees', ...
        angle(ori(100),ori(101))./degree)
end
ori3=ori





